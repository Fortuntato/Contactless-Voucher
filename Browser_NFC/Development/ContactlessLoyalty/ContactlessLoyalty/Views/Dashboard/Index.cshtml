@model ContactlessLoyalty.Data.Dashboard
@{
    ViewData["Title"] = "Index";
    Layout = "/Views/Shared/_Layout.cshtml";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AccountContactlessLoyaltyUser> SignInManager
@inject UserManager<AccountContactlessLoyaltyUser> UserManager

<div class="body-content">
    <h1>Hi @Model.User.FirstName !</h1>
    <h3>This is the loyalty card for: <br />  @Model.StoreName</h3>
    <p>
        <a asp-action="Create">Go to get a new loyalty card</a>
    </p>

    @for (int i = 0; i < Model.NumberOfStamps; i++)
    {
        <div class="col-xs-4 stampIcon">
            <img src="~/images/avataaars.svg" alt="" id="stamp-@i" onclick="readFunction('@i')" />
        </div>
    }

</div>

<form asp-action="CollectStamp" asp-controller="Dashboard" method="post" id="magicForm">
    @Html.AntiForgeryToken()
    <input name="collection" type="hidden" value="Avalue">
</form>


@* Create a method to check if there NFC available on the phone to show an alert
    @if (!string.IsNullOrEmpty(Model.StoreName))
    {
        <script>alert("Welcome to @Model.StoreName");</script>
    }*@

<script>

    //var device = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));
    //console.log(device);
    //console.log(navigator.userAgent.toLowerCase());

    async function readFunction(imageNumber) {
        try {
            const reader = new NDEFReader();
            await reader.scan();
            console.log("> Scan started");
            //alert('First alert attempt');
            reader.addEventListener("error", (event) => {
                console.log(`Argh! ${event.message}`);
                 alert('No NFC for youu!');
                });

            reader.addEventListener("reading", ({ message, serialNumber }) => {

                var text = "";
                const decoder = new TextDecoder();
                var newLine = "\n";

                for (const record of message.records) {
                    switch (record.recordType) {
                        case "empty":
                            text += newLine + "(empty case)";
                            break;
                        case "text":
                            text += newLine + decoder.decode(record.data) + "(text case)";
                            break;
                        case "url":
                            text += newLine + decoder.decode(record.data) + "URL case";
                            break;
                        case "smart-poster":
                            text += newLine + decoder.decode(record.data) + "(smart poster case)";
                            break;
                        case "absolute-url":
                            text += newLine + decoder.decode(record.data) + "(absolute URL)";
                            break;
                        case "mime":

                            if (record.mediaType === 'application/json') {
                                const json = JSON.parse(decoder.decode(record.data));
                                console.log(json);
                                text = decoder.decode(record.data);
                                // To display json object inside html page
                                var mainContainer = document.getElementById("jsonData");
                                //var div = document.createElement("div");
                                //div.innerHTML = "Name: " + json.name + " Position: " + json.position;
                                //mainContainer.appendChild(div);
                                console.log(document.getElementById("stamp-1"));
                                console.log("User phone number " + @Model.User.PhoneNumber)
                                document.getElementById("stamp-" + imageNumber).src = "@Url.Content("/images/banner1.svg")";
                                //document.getElementById("jsonData").value = "Something Example";

                                @*window.location.href = '@Url.Action("CollectStamp", "Dashboard")';*@

                                //document.getElementById("collectData").value = "AnExample";
                                document.getElementById("magicForm").submit();
                            }
                            break;
                        case "unknown":
                            text += newLine + decoder.decode(record.data) + "(UNKNOWN)";
                        default:
                            text += newLine + "Something unexpected: " + record
                            break;
                    }
                }

                console.log(`> Serial Number: ${serialNumber}`);
                console.log(`> Records: (${message.records.length})`);

                //document.getElementById("jsonData").innerHTML = text;

            });
        } catch (error) {
            console.log("Argh! " + error);
        }
    }
</script>