@model ContactlessLoyalty.Data.Dashboard

@{
    ViewData["Title"] = "Create";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<body class="body-content">
    <h2>Create</h2>

    <h4>Dashboard</h4>
    <hr />

    <div>
        <input class="btn-shadow" type="button" value="Create New Loyalty Card" onclick="location.href='@Url.Action("CreateCard", "Dashboard")'" />
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-xs-4 stampIcon" id="firstStamp">
                <img src="~/images/avataaars.svg" alt="" id="firstStamp1" onclick="readFunction()" />
            </div>
            <div class="col-xs-4 stampIcon" id="SecondStamp">
                <img src="~/images/avataaars.svg" alt="" id="firstStamp2" onclick="readFunction()" />
            </div>
            <div class="col-xs-4 stampIcon" id="ThirdStamp">
                <img src="~/images/avataaars.svg" alt="" onclick="readFunction()" />
            </div>
        </div>
    </div>
</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    var elements = document.getElementsByClassName("stampIcon");
    for (var i = 0; i < elements.length; i++) {
        elements[i].addEventListener("click", (event) => {

        });
    }

    async function readFunction() {
        try {
            const reader = new NDEFReader();
            await reader.scan();
            console.log("> Scan started");

            reader.addEventListener("error", (event) => {
                console.log(`Argh! ${event.message}`);
            });

            reader.addEventListener("reading", ({ message, serialNumber }) => {

                var text = "";
                const decoder = new TextDecoder();
                var newLine = "\n";

                for (const record of message.records) {
                    switch (record.recordType) {
                        case "empty":
                            text += newLine + "(empty case)";
                            break;
                        case "text":
                            text += newLine + decoder.decode(record.data) + "(text case)";
                            break;
                        case "url":
                            text += newLine + decoder.decode(record.data) + "URL case";
                            break;
                        case "smart-poster":
                            text += newLine + decoder.decode(record.data) + "(smart poster case)";
                            break;
                        case "absolute-url":
                            text += newLine + decoder.decode(record.data) + "(absolute URL)";
                            break;
                        case "mime":

                            if (record.mediaType === 'application/json') {
                                const json = JSON.parse(decoder.decode(record.data));
                                console.log(json);
                                text = decoder.decode(record.data);
                                // To display json object inside html page
                                var mainContainer = document.getElementById("jsonData");
                                var div = document.createElement("div");
                                div.innerHTML = "Name: " + json.name + " Position: " + json.position;
                                mainContainer.appendChild(div);
                                //document.getElementById("firstStamp1").src = "https://image.flaticon.com/icons/svg/2935/2935679.svg";
                                document.getElementById("jsonData").value = "Something Example";

                            }
                            break;
                        case "unknown":
                            text += newLine + decoder.decode(record.data) + "(UNKNOWN)";
                        default:
                            text += newLine + "Something unexpected: " + record
                            break;
                    }
                }

                console.log(`> Serial Number: ${serialNumber}`);
                console.log(`> Records: (${message.records.length})`);

                //document.getElementById("jsonData").innerHTML = text;

            });
        } catch (error) {
            console.log("Argh! " + error);
        }
    }
</script>